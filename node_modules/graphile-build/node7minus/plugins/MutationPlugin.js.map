{"version":3,"sources":["../../src/plugins/MutationPlugin.js"],"names":["builder","hook","schema","newWithHooks","extend","GraphQLObjectType","graphql","Mutation","name","description","isRootMutation","mutation","MutationPlugin"],"mappings":";;;;;;;;;;;;;;;;;sFAGgB,iBAA8BA,OAA9B;AAAA;AAAA;AAAA;AAAA;AACdA,oBAAQC,IAAR,CACE,eADF,EAEE,UAACC,MAAD,SAA0E;AAAA,kBAA3DC,YAA2D,SAA3DA,YAA2D;AAAA,kBAA7CC,MAA6C,SAA7CA,MAA6C;AAAA,kBAA1BC,iBAA0B,SAArCC,OAAqC,CAA1BD,iBAA0B;;AACxE,kBAAME,WAAWJ,aACfE,iBADe,EAEf;AACEG,sBAAM,UADR;AAEEC,6BACE;AAHJ,eAFe,EAOf,EAAEC,gBAAgB,IAAlB,EAPe,EAQf,IARe,CAAjB;AAUA,kBAAIH,QAAJ,EAAc;AACZ,uBAAOH,OAAOF,MAAP,EAAe;AACpBS,4BAAUJ;AADU,iBAAf,CAAP;AAGD,eAJD,MAIO;AACL,uBAAOL,MAAP;AACD;AACF,aApBH;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeU,c;;;;SAAAA,c","file":"MutationPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"../SchemaBuilder\";\n\nexport default (async function MutationPlugin(builder) {\n  builder.hook(\n    \"GraphQLSchema\",\n    (schema: {}, { newWithHooks, extend, graphql: { GraphQLObjectType } }) => {\n      const Mutation = newWithHooks(\n        GraphQLObjectType,\n        {\n          name: \"Mutation\",\n          description:\n            \"The root mutation type which contains root level fields which mutate data.\",\n        },\n        { isRootMutation: true },\n        true\n      );\n      if (Mutation) {\n        return extend(schema, {\n          mutation: Mutation,\n        });\n      } else {\n        return schema;\n      }\n    }\n  );\n}: Plugin);\n"]}