{"version":3,"sources":["../../src/plugins/PgConnectionTotalCount.js"],"names":["PgConnectionTotalCount","builder","hook","fields","extend","inflection","pgInflection","GraphQLInt","graphql","scope","isPgRowConnectionType","table","pgIntrospection","fieldWithHooks","Self","kind","namespace","tableTypeName","tableType","name","totalCount","addDataGenerator","pgCalculateTotalCount","description","type","isPgConnectionTotalCountField"],"mappings":";;;;;;kBAGgB,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AACvDA,UAAQC,IAAR,CACE,0BADF,EAEE,UACEC,MADF,eAQK;AAAA,QANDC,MAMC,QANDA,MAMC;AAAA,QANqBC,UAMrB,QANOC,YAMP;AAAA,QAN4CC,UAM5C,QANiCC,OAMjC,CAN4CD,UAM5C;AAAA,4BAJDE,KAIC;AAAA,QAJQC,qBAIR,eAJQA,qBAIR;AAAA,QAJgDC,KAIhD,eAJ+BC,eAI/B;AAAA,QAHDC,cAGC,SAHDA,cAGC;AAAA,QAFDC,IAEC,SAFDA,IAEC;;AACH,QACE,CAACJ,qBAAD,IACA,CAACC,KADD,IAEAA,MAAMI,IAAN,KAAe,OAFf,IAGA,CAACJ,MAAMK,SAJT,EAKE;AACA,aAAOb,MAAP;AACD;AACD,QAAMc,gBAAgBZ,WAAWa,SAAX,CACpBP,MAAMQ,IADc,EAEpBR,MAAMK,SAAN,CAAgBG,IAFI,CAAtB;AAIA,WAAOf,OACLD,MADK,EAEL;AACEiB,kBAAYP,eACV,YADU,EAEV,iBAA0B;AAAA,YAAvBQ,gBAAuB,SAAvBA,gBAAuB;;AACxBA,yBAAiB,YAAM;AACrB,iBAAO;AACLC,mCAAuB;AADlB,WAAP;AAGD,SAJD;AAKA,eAAO;AACLC,uBAAc,wBAAuBN,aAAc,uCAD9C;AAELO,gBAAMjB;AAFD,SAAP;AAID,OAZS,EAaV;AACEkB,uCAA+B;AADjC,OAbU;AADd,KAFK,EAqBJ,oCAAmCX,KAAKK,IAAK,GArBzC,CAAP;AAuBD,GA9CH;AAgDD,C","file":"PgConnectionTotalCount.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nexport default (function PgConnectionTotalCount(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (\n      fields,\n      { extend, pgInflection: inflection, graphql: { GraphQLInt } },\n      {\n        scope: { isPgRowConnectionType, pgIntrospection: table },\n        fieldWithHooks,\n        Self,\n      }\n    ) => {\n      if (\n        !isPgRowConnectionType ||\n        !table ||\n        table.kind !== \"class\" ||\n        !table.namespace\n      ) {\n        return fields;\n      }\n      const tableTypeName = inflection.tableType(\n        table.name,\n        table.namespace.name\n      );\n      return extend(\n        fields,\n        {\n          totalCount: fieldWithHooks(\n            \"totalCount\",\n            ({ addDataGenerator }) => {\n              addDataGenerator(() => {\n                return {\n                  pgCalculateTotalCount: true,\n                };\n              });\n              return {\n                description: `The count of *all* \\`${tableTypeName}\\` you could get from the connection.`,\n                type: GraphQLInt,\n              };\n            },\n            {\n              isPgConnectionTotalCountField: true,\n            }\n          ),\n        },\n        `Adding totalCount to connection '${Self.name}'`\n      );\n    }\n  );\n}: Plugin);\n"]}