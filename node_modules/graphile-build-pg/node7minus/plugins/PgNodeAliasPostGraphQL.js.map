{"version":3,"sources":["../../src/plugins/PgNodeAliasPostGraphQL.js"],"names":["builder","hook","object","setNodeAlias","scope","isPgRowType","isPgCompoundType","table","pgIntrospection","name","PgNodeAliasPostGraphQL"],"mappings":";;;;;;;;;;;;;;AAGA;;;;;;;sFAEgB,iBAAsCA,OAAtC;AAAA;AAAA;AAAA;AAAA;AACdA,oBAAQC,IAAR,CACE,mBADF,EAEE,UACEC,MADF,gBAIK;AAAA,kBAFDC,YAEC,SAFDA,YAEC;AAAA,sCADDC,KACC;AAAA,kBADQC,WACR,eADQA,WACR;AAAA,kBADqBC,gBACrB,eADqBA,gBACrB;AAAA,kBADwDC,KACxD,eADuCC,eACvC;;AACH,kBAAIH,eAAeC,gBAAnB,EAAqC;AACnCH,6BAAaD,OAAOO,IAApB,EAA0B,yBAAUF,MAAME,IAAhB,CAA1B;AACD;AACD,qBAAOP,MAAP;AACD,aAXH;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeQ,sB;;;;SAAAA,sB","file":"PgNodeAliasPostGraphQL.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\n\nimport pluralize from \"pluralize\";\n\nexport default (async function PgNodeAliasPostGraphQL(builder) {\n  builder.hook(\n    \"GraphQLObjectType\",\n    (\n      object,\n      { setNodeAlias },\n      { scope: { isPgRowType, isPgCompoundType, pgIntrospection: table } }\n    ) => {\n      if (isPgRowType || isPgCompoundType) {\n        setNodeAlias(object.name, pluralize(table.name));\n      }\n      return object;\n    }\n  );\n}: Plugin);\n"]}