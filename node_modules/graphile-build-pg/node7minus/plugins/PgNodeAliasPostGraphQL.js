"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _pluralize = require("pluralize");

var _pluralize2 = _interopRequireDefault(_pluralize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(builder) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            builder.hook("GraphQLObjectType", function (object, _ref2, _ref3) {
              var setNodeAlias = _ref2.setNodeAlias;
              var _ref3$scope = _ref3.scope,
                  isPgRowType = _ref3$scope.isPgRowType,
                  isPgCompoundType = _ref3$scope.isPgCompoundType,
                  table = _ref3$scope.pgIntrospection;

              if (isPgRowType || isPgCompoundType) {
                setNodeAlias(object.name, (0, _pluralize2.default)(table.name));
              }
              return object;
            });

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function PgNodeAliasPostGraphQL(_x) {
    return _ref.apply(this, arguments);
  }

  return PgNodeAliasPostGraphQL;
}();
//# sourceMappingURL=PgNodeAliasPostGraphQL.js.map