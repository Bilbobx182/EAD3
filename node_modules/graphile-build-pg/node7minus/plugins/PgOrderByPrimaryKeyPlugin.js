"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function PgOrderByPrimaryKeyPlugin(builder) {
  builder.hook("GraphQLEnumType:values", function (values, _ref, _ref2) {
    var extend = _ref.extend,
        introspectionResultsByKind = _ref.pgIntrospectionResultsByKind;
    var _ref2$scope = _ref2.scope,
        isPgRowSortEnum = _ref2$scope.isPgRowSortEnum,
        table = _ref2$scope.pgIntrospection;

    if (!isPgRowSortEnum || !table || table.kind !== "class") {
      return values;
    }
    var attributes = introspectionResultsByKind.attribute.filter(function (attr) {
      return attr.classId === table.id;
    });
    var primaryKeyConstraint = introspectionResultsByKind.constraint.filter(function (con) {
      return con.classId === table.id;
    }).filter(function (con) {
      return con.type === "p";
    })[0];
    if (!primaryKeyConstraint) {
      return values;
    }
    var primaryKeys = primaryKeyConstraint && primaryKeyConstraint.keyAttributeNums.map(function (num) {
      return attributes.filter(function (attr) {
        return attr.num === num;
      })[0];
    });
    return extend(values, {
      PRIMARY_KEY_ASC: {
        value: {
          alias: "primary_key_asc",
          specs: primaryKeys.map(function (key) {
            return [key.name, true];
          }),
          unique: true
        }
      },
      PRIMARY_KEY_DESC: {
        value: {
          alias: "primary_key_desc",
          specs: primaryKeys.map(function (key) {
            return [key.name, false];
          }),
          unique: true
        }
      }
    }, `Adding primary key asc/desc sort to table '${table.name}'`);
  });
};
//# sourceMappingURL=PgOrderByPrimaryKeyPlugin.js.map