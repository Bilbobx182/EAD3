{"version":3,"sources":["../../src/plugins/PgMutationProceduresPlugin.js"],"names":["PgMutationProceduresPlugin","builder","hook","fields","build","isRootMutation","scope","fieldWithHooks","extend","introspectionResultsByKind","pgIntrospectionResultsByKind","inflection","pgInflection","procedure","filter","proc","isStable","namespace","reduce","memo","fieldName","functionName","name","isMutation"],"mappings":";;;;;;AAEA;;;;;;kBAEgB,SAASA,0BAAT,CAAoCC,OAApC,EAA6C;AAC3DA,UAAQC,IAAR,CACE,0BADF,EAEE,UAACC,MAAD,EAASC,KAAT,QAAkE;AAAA,QAAvCC,cAAuC,QAAhDC,KAAgD,CAAvCD,cAAuC;AAAA,QAArBE,cAAqB,QAArBA,cAAqB;;AAChE,QAAI,CAACF,cAAL,EAAqB;AACnB,aAAOF,MAAP;AACD;AAH+D,QAK9DK,MAL8D,GAQ5DJ,KAR4D,CAK9DI,MAL8D;AAAA,QAMhCC,0BANgC,GAQ5DL,KAR4D,CAM9DM,4BAN8D;AAAA,QAOhDC,UAPgD,GAQ5DP,KAR4D,CAO9DQ,YAP8D;;AAShE,WAAOJ,OACLL,MADK,EAELM,2BAA2BI,SAA3B,CACGC,MADH,CACU;AAAA,aAAQ,CAACC,KAAKC,QAAd;AAAA,KADV,EAEGF,MAFH,CAEU;AAAA,aAAQ,CAAC,CAACC,KAAKE,SAAf;AAAA,KAFV,EAGGC,MAHH,CAGU,UAACC,IAAD,EAAOJ,IAAP,EAAgB;AACtB;;;;;;;;;;;;;;;AAeA,UAAMK,YAAYT,WAAWU,YAAX,CAChBN,KAAKO,IADW,EAEhBP,KAAKE,SAAL,CAAeK,IAFC,CAAlB;AAIAH,WAAKC,SAAL,IAAkB,6BAAcA,SAAd,EAAyBL,IAAzB,EAA+BX,KAA/B,EAAsC;AACtDG,sBADsD;AAEtDgB,oBAAY;AAF0C,OAAtC,CAAlB;AAIA,aAAOJ,IAAP;AACD,KA5BH,EA4BK,EA5BL,CAFK,EA+BJ,kDA/BI,CAAP;AAiCD,GA5CH;AA8CD,C","file":"PgMutationProceduresPlugin.js","sourcesContent":["// @flow\nimport type { Plugin } from \"graphile-build\";\nimport makeProcField from \"./makeProcField\";\n\nexport default (function PgMutationProceduresPlugin(builder) {\n  builder.hook(\n    \"GraphQLObjectType:fields\",\n    (fields, build, { scope: { isRootMutation }, fieldWithHooks }) => {\n      if (!isRootMutation) {\n        return fields;\n      }\n      const {\n        extend,\n        pgIntrospectionResultsByKind: introspectionResultsByKind,\n        pgInflection: inflection,\n      } = build;\n      return extend(\n        fields,\n        introspectionResultsByKind.procedure\n          .filter(proc => !proc.isStable)\n          .filter(proc => !!proc.namespace)\n          .reduce((memo, proc) => {\n            /*\n            proc =\n              { kind: 'procedure',\n                name: 'integration_webhook_secret',\n                description: null,\n                namespaceId: '6484381',\n                isStrict: false,\n                returnsSet: false,\n                isStable: true,\n                returnTypeId: '2950',\n                argTypeIds: [ '6484569' ],\n                argNames: [ 'integration' ],\n                argDefaultsNum: 0 }\n            */\n\n            const fieldName = inflection.functionName(\n              proc.name,\n              proc.namespace.name\n            );\n            memo[fieldName] = makeProcField(fieldName, proc, build, {\n              fieldWithHooks,\n              isMutation: true,\n            });\n            return memo;\n          }, {}),\n        `Adding mutation procedure to root Mutation field`\n      );\n    }\n  );\n}: Plugin);\n"]}