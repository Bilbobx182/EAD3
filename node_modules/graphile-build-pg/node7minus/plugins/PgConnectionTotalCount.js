"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function PgConnectionTotalCount(builder) {
  builder.hook("GraphQLObjectType:fields", function (fields, _ref, _ref2) {
    var extend = _ref.extend,
        inflection = _ref.pgInflection,
        GraphQLInt = _ref.graphql.GraphQLInt;
    var _ref2$scope = _ref2.scope,
        isPgRowConnectionType = _ref2$scope.isPgRowConnectionType,
        table = _ref2$scope.pgIntrospection,
        fieldWithHooks = _ref2.fieldWithHooks,
        Self = _ref2.Self;

    if (!isPgRowConnectionType || !table || table.kind !== "class" || !table.namespace) {
      return fields;
    }
    var tableTypeName = inflection.tableType(table.name, table.namespace.name);
    return extend(fields, {
      totalCount: fieldWithHooks("totalCount", function (_ref3) {
        var addDataGenerator = _ref3.addDataGenerator;

        addDataGenerator(function () {
          return {
            pgCalculateTotalCount: true
          };
        });
        return {
          description: `The count of *all* \`${tableTypeName}\` you could get from the connection.`,
          type: GraphQLInt
        };
      }, {
        isPgConnectionTotalCountField: true
      })
    }, `Adding totalCount to connection '${Self.name}'`);
  });
};
//# sourceMappingURL=PgConnectionTotalCount.js.map